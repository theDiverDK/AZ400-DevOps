# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

variables:
  suffix: '010572'
  location: 'westeurope'
  resource-group: 'az-400'
  templateFile: '.azure/bicep/Function.bicep'
  subscriptionid: '8ed210d1-9420-4e71-968d-a73398093c77'
  azureserviceconnection: 'azureConnection'
  appName: 'functions$(suffix)'
  storageAccountName: 'storage$(suffix)'

pool:
  name: 'Minecraft server'
  vmImage: 'ubuntu-latest'
  
steps:
- task: DotNetCoreCLI@2
  displayName: Restore
  inputs:
    command: 'restore'
    projects: '**/*.sln'
    feedsToUse: 'select'

- task: DotNetCoreCLI@2
  displayName: Build
  inputs:
    command: 'build'
    projects: '**/*.sln'

- task: DotNetCoreCLI@2
  displayName: Publish
  inputs:
    command: publish
    arguments: '--configuration Release --output publish_output'
    projects: '**/*.sln'
    publishWebProjects: false
    modifyOutputPath: false
    zipAfterPublish: false

- task: ArchiveFiles@2
  displayName: "Archive files"
  inputs:
    rootFolderOrFile: "publish_output"
    includeRootFolder: false
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'

- task: AzureFunctionApp@2
  inputs:
    connectedServiceNameARM: azureConnection
    appType: functionApp
    appName: $(appName)
    package: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'

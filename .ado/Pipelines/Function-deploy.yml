#This pipeline will create resource group and needed resources within
#Then checkout, restore, build and deploy a Function App

trigger:
- main

variables:
  - group: 'Function-App-Prod'
  
  - name: templateFile
    value: '.azure/bicep/Function.bicep'

  - name: azureServiceConnection
    value: 'azureConnection'

  - name: appname
    value: 'functions$(suffix)'

  - name: storageAccountName
    value: 'storage$(suffix)'

pool:
  name: 'Minecraft server'
  vmImage: 'ubuntu-latest'

  
stages:
  #Setup or update environment
  - stage:
    displayName: Create or update environment
    variables:
      - group: 'Function-App-Prod'
    jobs:
      - job:
        steps:
          - checkout: none
          - task: AzureCLI@2
            displayName: Create or update the resource group
            inputs:
              azureSubscription: '$(azureServiceConnection)'
              scriptType: pscore
              scriptLocation: inlineScript
              inlineScript: |
                az group create --location $(location) --name $(resourceGroupName)

          - task: AzureResourceManagerTemplateDeployment@3
            displayName: Create or update environment
            inputs:
              addSpnToEnvironment: true
              deploymentScope: 'Resource Group'
              azureResourceManagerConnection: '$(azureServiceConnection)'
              action: 'Create Or Update Resource Group'
              resourceGroupName: '$(resourceGroupName)'
              location: '$(location)'
              templateLocation: 'Linked artifact'
              csmFile: '$(templateFile)'
              overrideParameters: '-appName $(appname) -location $(location) -storageAccountName $(storageaccountname)'
              deploymentMode: 'Incremental'
              deploymentOutputs: 'asp-json'

  - stage:
    #Checkout, restore, build and deploy the function app
    displayName: Build & Deploy
    jobs:
      - job:
        steps:
        - task: DotNetCoreCLI@2
          displayName: Restore
          inputs:
            command: 'restore'
            projects: '**/*.sln'
            feedsToUse: 'select'

        - task: DotNetCoreCLI@2
          displayName: Build
          inputs:
            command: 'build'
            projects: '**/*.sln'

        - task: DotNetCoreCLI@2
          displayName: Publish
          inputs:
            command: publish
            arguments: '--configuration Release --output publish_output'
            projects: '**/*.sln'
            publishWebProjects: false
            modifyOutputPath: false
            zipAfterPublish: false

        - task: ArchiveFiles@2
          displayName: "Archive files"
          inputs:
            rootFolderOrFile: "publish_output"
            includeRootFolder: false
            archiveType: 'zip'
            archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'

        - task: AzureFunctionApp@2
          inputs:
            connectedServiceNameARM: azureConnection
            appType: functionApp
            appName: $(appName)
            package: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
